// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// run
List run(unsigned& N, unsigned& d, unsigned& timeSteps, Eigen::MatrixXd Y, Eigen::VectorXd m0, Eigen::MatrixXd C0, Eigen::MatrixXd F, int sampler, int distribution);
RcppExport SEXP _CuMCMC_run(SEXP NSEXP, SEXP dSEXP, SEXP timeStepsSEXP, SEXP YSEXP, SEXP m0SEXP, SEXP C0SEXP, SEXP FSEXP, SEXP samplerSEXP, SEXP distributionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned& >::type N(NSEXP);
    Rcpp::traits::input_parameter< unsigned& >::type d(dSEXP);
    Rcpp::traits::input_parameter< unsigned& >::type timeSteps(timeStepsSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type m0(m0SEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type C0(C0SEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type F(FSEXP);
    Rcpp::traits::input_parameter< int >::type sampler(samplerSEXP);
    Rcpp::traits::input_parameter< int >::type distribution(distributionSEXP);
    rcpp_result_gen = Rcpp::wrap(run(N, d, timeSteps, Y, m0, C0, F, sampler, distribution));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CuMCMC_run", (DL_FUNC) &_CuMCMC_run, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_CuMCMC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
